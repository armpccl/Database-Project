{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\armi_\\\\Downloads\\\\Projects\\\\bookstore-app\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\";\n// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children,\n  requiredRole\n}) {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    // ยังไม่ล็อกอิน → ให้ไปหน้า login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  let decoded;\n  try {\n    decoded = jwtDecode(token);\n  } catch (e) {\n    // token ผิดพลาด → ลบ token แล้วไป login ใหม่\n    localStorage.removeItem('token');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ถ้ามี requiredRole (เช่น \"admin\") แต่ role ใน token ไม่ตรง → ห้ามเข้าถึง\n  if (requiredRole && decoded.role !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ผ่านทุกเงื่อนไข → เรนเดอร์ children ต่อ\n  return children;\n}\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","token","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","decoded","e","removeItem","role","_c","$RefreshReg$"],"sources":["C:/Users/armi_/Downloads/Projects/bookstore-app/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["// src/components/ProtectedRoute.jsx\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nexport default function ProtectedRoute({ children, requiredRole }) {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    // ยังไม่ล็อกอิน → ให้ไปหน้า login\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  let decoded;\r\n  try {\r\n    decoded = jwtDecode(token);\r\n  } catch (e) {\r\n    // token ผิดพลาด → ลบ token แล้วไป login ใหม่\r\n    localStorage.removeItem('token');\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // ถ้ามี requiredRole (เช่น \"admin\") แต่ role ใน token ไม่ตรง → ห้ามเข้าถึง\r\n  if (requiredRole && decoded.role !== requiredRole) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // ผ่านทุกเงื่อนไข → เรนเดอร์ children ต่อ\r\n  return children;\r\n}\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EACjE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACV;IACA,oBAAOJ,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAIC,OAAO;EACX,IAAI;IACFA,OAAO,GAAGf,SAAS,CAACM,KAAK,CAAC;EAC5B,CAAC,CAAC,OAAOU,CAAC,EAAE;IACV;IACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChC,oBAAOf,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIT,YAAY,IAAIU,OAAO,CAACG,IAAI,KAAKb,YAAY,EAAE;IACjD,oBAAOH,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,OAAOV,QAAQ;AACjB;AAACe,EAAA,GAvBuBhB,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}